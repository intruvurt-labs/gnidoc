{
  "version": 1,
  "generatedAt": "2025-10-15T00:00:00.000Z",
  "storageLib": "@react-native-async-storage/async-storage",
  "secureStorageLib": "expo-secure-store",
  "keys": [
    {
      "key": "settings.notifications",
      "context": "SettingsContext",
      "type": "boolean",
      "default": true,
      "read": true,
      "write": true,
      "secure": false,
      "roundTripVerified": true
    },
    {
      "key": "settings.weeklyDigest",
      "context": "SettingsContext",
      "type": "boolean",
      "default": false,
      "read": true,
      "write": true,
      "secure": false,
      "roundTripVerified": true
    },
    {
      "key": "settings.showTooltips",
      "context": "SettingsContext",
      "type": "boolean",
      "default": true,
      "read": true,
      "write": true,
      "secure": false,
      "roundTripVerified": true
    },
    {
      "key": "session.accessToken",
      "context": "AuthContext",
      "type": "string | null",
      "default": null,
      "read": true,
      "write": true,
      "secure": true,
      "roundTripVerified": true,
      "notes": "Also stored as 'auth-token' for compatibility"
    },
    {
      "key": "theme.currentPalette",
      "context": "ThemeContext",
      "type": "string",
      "default": "default",
      "read": true,
      "write": true,
      "secure": false,
      "roundTripVerified": true
    },
    {
      "key": "onboarding_completed",
      "context": "app/_layout.tsx (OnboardingWrapper)",
      "type": "boolean",
      "default": false,
      "read": true,
      "write": true,
      "secure": false,
      "roundTripVerified": true,
      "notes": "Controls OnboardingTour visibility"
    },
    {
      "key": "auth-token",
      "context": "AuthContext, LogoMenu",
      "type": "string | null",
      "default": null,
      "read": true,
      "write": true,
      "secure": true,
      "roundTripVerified": true,
      "notes": "Primary auth token key"
    },
    {
      "key": "logo-menu:last-project-id",
      "context": "LogoMenu",
      "type": "string | null",
      "default": null,
      "read": true,
      "write": true,
      "secure": false,
      "roundTripVerified": true,
      "notes": "Tracks last active project"
    },
    {
      "key": "gnidoc-integrations",
      "context": "IntegrationsContext",
      "type": "object (JSON)",
      "default": "DEFAULT_INTEGRATIONS",
      "read": true,
      "write": true,
      "secure": false,
      "roundTripVerified": true,
      "notes": "Contains integration metadata (no credentials)"
    },
    {
      "key": "gnidoc-integrations-version",
      "context": "IntegrationsContext",
      "type": "number",
      "default": 1,
      "read": true,
      "write": true,
      "secure": false,
      "roundTripVerified": true,
      "notes": "Migration versioning"
    },
    {
      "key": "@integration_secret_*",
      "context": "IntegrationsContext",
      "type": "object (JSON)",
      "default": {},
      "read": true,
      "write": true,
      "secure": true,
      "roundTripVerified": true,
      "notes": "Dynamic key per integration ID; uses SecureStore on native, AsyncStorage on web"
    }
  ],
  "backgroundFlush": {
    "enabled": true,
    "contexts": ["IntegrationsContext"],
    "trigger": "AppState change to 'background'",
    "implementation": "AppState.addEventListener in useEffect",
    "verified": true
  },
  "migration": {
    "enabled": true,
    "versionKey": "gnidoc-integrations-version",
    "currentVersion": 1,
    "strategy": "Check on load, apply transforms, update version key"
  },
  "security": {
    "sensitiveKeys": [
      "session.accessToken",
      "auth-token",
      "@integration_secret_*"
    ],
    "secureStoreUsage": "Preferred on iOS/Android via expo-secure-store",
    "webFallback": "AsyncStorage (no hardware encryption)",
    "redactedLogging": true,
    "notes": "All credential fields (apiKey, secret, token) are redacted in logs"
  },
  "validation": {
    "totalKeys": 11,
    "withDefaults": 11,
    "withRoundTrip": 11,
    "secureKeys": 3,
    "status": "VALID"
  },
  "recommendations": [
    {
      "priority": "LOW",
      "action": "Unify auth token keys",
      "details": "Both 'session.accessToken' and 'auth-token' are used. Consider consolidating to single key.",
      "impact": "Code clarity"
    },
    {
      "priority": "MEDIUM",
      "action": "Add encryption for sensitive AsyncStorage keys on web",
      "details": "Consider using crypto-js or similar for web credential storage",
      "impact": "Security hardening"
    }
  ]
}
